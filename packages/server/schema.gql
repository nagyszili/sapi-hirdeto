# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PossibleValues {
  dependingKey: String
  values: [String!]!
}

type Attribute {
  title: String!
  type: String!
  possibleValues: [PossibleValues!]!
  required: Boolean!
  dependsBy: String
}

type MainCategory {
  id: ID!
  identifier: String!
  name: String!
}

type Category {
  id: ID!
  name: String!
  identifier: String!
  attributes: [Attribute!]!
  mainCategory: MainCategory!
}

type AttributeValue {
  key: String!
  value: String!
}

type Location {
  longitude: Float!
  latitude: Float!
  name: String!
  county: String!
}

type Image {
  priority: Int!
  url: String!
}

type Ad {
  id: ID!
  identifier: String!
  status: String!
  name: String!
  user: User!
  price: Float!
  currency: String!
  negotiable: Boolean!
  description: String
  thumbnail: Image
  numberOfImages: Int!
  images: [Image!]
  createdAt: DateTime!
  updatedAt: DateTime
  actualizedAt: DateTime!
  location: Location!
  views: Int!
  category: Category!
  attributeValues: [AttributeValue!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  id: ID!
  name: String!
  email: String!
  profilePictureUrl: String
  phoneNumber: String
  loginType: String!
  role: String!
  favorites: [Ad!]
}

type AdListItem {
  id: ID!
  identifier: String!
  status: String!
  name: String!
  user: User!
  price: Float!
  currency: String!
  negotiable: Boolean!
  description: String
  thumbnail: String
  numberOfImages: Int!
  createdAt: DateTime!
  updatedAt: DateTime
  actualizedAt: DateTime!
  location: Location!
  views: Int!
  attributeValues: [AttributeValue!]
}

type UserAdsList {
  id: ID!
  name: String!
  email: String!
  phoneNumber: String
  loginType: String!
  role: String!
  profilePictureUrl: String
  favorites: [String!]
}

type AccessToken {
  access_token: String!
}

type LocationQueryType {
  type: String!
  name: String!
  county: String
}

type Query {
  currentUser: UserAdsList!
  countUsersByDate(toDate: DateTime!, fromDate: DateTime!): Int!
  findUserById(id: String!): User!
  findAllUsers: [User!]!
  countAdsByDate(toDate: DateTime!, fromDate: DateTime!): Int!
  findAdById(id: String!): Ad!
  findAdByIdentifier(userId: String, identifier: String!): Ad!
  findAdsByUser(page: Int, perPage: Int): [AdListItem!]!
  findFavoriteAdsByUser: [AdListItem!]!
  findAllAds(page: Int, perPage: Int, sortField: String, sortOrder: Int, queryString: String, inDescription: Boolean, categoryIdentifier: String, mainCategoryIdentifier: String, location: LocationQueryInput, currency: String!, creatorId: String, filters: [Filter!]): [AdListItem!]!
  findAdsByIds(ids: [String!]!): [AdListItem!]!
  countAllAds(page: Int, perPage: Int, sortField: String, sortOrder: Int, queryString: String, inDescription: Boolean, categoryIdentifier: String, mainCategoryIdentifier: String, location: LocationQueryInput, currency: String!, creatorId: String, filters: [Filter!]): Int!
  estimatedCount: Int!
  findCategoryById(id: String!): Category!
  findCategoryByIdentifier(identifier: String!): Category!
  findAllCategories: [Category!]!
  findCategoriesByMainCategoryId(id: String!): [Category!]!
  findCategoriesByMainCategoryIdentifier(identifier: String!): [Category!]!
  findMainCategoryById(id: String!): MainCategory!
  findMainCategoryByIdentifier(identifier: String!): MainCategory!
  findAllMainCategories: [MainCategory!]!
  countLocations: Int!
  allLocations: [Location!]!
  allCounties: [String!]!
  findLocationsByName(limit: Int!, name: String!): [LocationQueryType!]!
  findLocationsByCounty(county: String!): [Location!]!
}

input LocationQueryInput {
  type: String!
  name: String!
  county: String
}

input Filter {
  type: String!
  name: String!
  from: Int
  to: Int
  selectedAttributeValues: [String!]
}

type Mutation {
  login(email: String!, password: String!): AccessToken!
  loginGoogle(idToken: String!): AccessToken!
  loginFacebook(accessToken: String!): AccessToken!
  createUser(email: String!, password: String!): User!
  updateCurrentUser(name: String, email: String, phoneNumber: String, profilePicture: Upload): User!
  updateUser(name: String, email: String, phoneNumber: String, profilePicture: Upload, id: String!): User!
  addAdToFavorites(adId: String!): UserAdsList!
  createAd(name: String!, price: Float!, currency: String!, negotiable: Boolean!, description: String!, thumbnail: ImageInput, images: [ImageInput!], location: LocationInput!, categoryId: String!, attributeValues: [AttributeValueInput!]): AdListItem!
  updateAd(name: String!, price: Float!, currency: String!, negotiable: Boolean!, description: String!, thumbnail: ImageUpdate, deletedImages: [String!], images: [ImageUpdate!], location: LocationInput!, categoryId: String!, attributeValues: [AttributeValueInput!], id: String!): AdListItem!
  setAdStatus(reasonOfDelete: String, status: String!, id: String!): Ad!
  actualizeAd(id: String!): AdListItem!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input ImageInput {
  priority: Int!
  image: Upload!
}

input LocationInput {
  longitude: Float!
  latitude: Float!
  name: String!
  county: String!
}

input AttributeValueInput {
  key: String!
  value: String!
  type: String!
}

input ImageUpdate {
  url: String
  image: Upload
  priority: Int!
}
